[{"/Users/rachel/Projects/nuArch-todo-app/todo-app/client/src/index.js":"1","/Users/rachel/Projects/nuArch-todo-app/todo-app/client/src/App.js":"2","/Users/rachel/Projects/nuArch-todo-app/todo-app/client/src/reportWebVitals.js":"3","/Users/rachel/Projects/nuArch-todo-app/todo-app/client/src/components/ListTodos.js":"4","/Users/rachel/Projects/nuArch-todo-app/todo-app/client/src/components/SingleTodo.js":"5","/Users/rachel/Projects/nuArch-todo-app/todo-app/client/src/components/AddTodo.js":"6","/Users/rachel/Projects/nuArch-todo-app/todo-app/client/src/components/EditTodo.js":"7"},{"size":535,"mtime":1677206993200,"results":"8","hashOfConfig":"9"},{"size":763,"mtime":1677258041004,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1677206993201,"results":"11","hashOfConfig":"9"},{"size":2407,"mtime":1677258041004,"results":"12","hashOfConfig":"9"},{"size":1235,"mtime":1677217116648,"results":"13","hashOfConfig":"9"},{"size":1472,"mtime":1677212304125,"results":"14","hashOfConfig":"9"},{"size":2329,"mtime":1677212304126,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mmd059",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"/Users/rachel/Projects/nuArch-todo-app/todo-app/client/src/index.js",[],[],"/Users/rachel/Projects/nuArch-todo-app/todo-app/client/src/App.js",[],[],"/Users/rachel/Projects/nuArch-todo-app/todo-app/client/src/reportWebVitals.js",[],[],"/Users/rachel/Projects/nuArch-todo-app/todo-app/client/src/components/ListTodos.js",["40"],[],"import React, { Fragment, useEffect,useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport EditTodo from \"./EditTodo\"\n\nfunction ListTodos () {\n    const [todos, setTodos] = useState([]);\n\n    async function getAllTodos () {\n        try {\n            const response = await fetch(\"http://localhost:5000/todos\")\n            const todos = await response.json();\n            setTodos(todos); \n        }\n        catch (err) {\n            console.error(err);\n        }\n    }\n\n    async function handleDelete (id) {\n        try {\n            const deleteTodo = await fetch(`http://localhost:5000/todos/${id}`, {\n                method: \"DELETE\",\n\n            })\n            setTodos(todos.filter(todo => todo.todo_id !== id));\n        }\n        catch (err) {\n            console.error(err);\n        }\n    }\n\n    function handleCheckboxChange (id, event) {\n        setTodos(todos.map(todo => {\n            if (todo.todo_id === id) {\n                todo.completed = !todo.completed;\n            }\n            return todo;\n        }))\n    }\n\n    useEffect(() => {\n        getAllTodos();\n    }, []);\n\n    console.log(todos)\n\n    return (\n        <Fragment>\n            <div className=\"container\">\n                <table className=\"table table-light table-striped table-bordered border-dark text-center\">\n                    <thead>\n                        <tr className=\"h3 font-weight-bold\">\n                            <th>Status</th>\n                            <th>Tasks</th>\n                            <th>Update</th>\n                            <th>Remove</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {todos.map(todo => (\n                        <tr key={todo.todo_id}>\n                            <td><input className=\"mx-5\" type=\"checkbox\" checked={todo.completed} onChange={(event) => handleCheckboxChange(todo.todo_id, event)} /></td>\n                            <td><Link to={`/todos/${todo.todo_id}`}>{todo.description}</Link></td>\n                            <td><EditTodo todo={todo}/></td>\n                            <td><button type=\"submit\" className=\"btn btn-danger\" onClick={() => handleDelete(todo.todo_id)}>Delete</button></td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListTodos;","/Users/rachel/Projects/nuArch-todo-app/todo-app/client/src/components/SingleTodo.js",[],[],"/Users/rachel/Projects/nuArch-todo-app/todo-app/client/src/components/AddTodo.js",["41"],[],"import React, { Fragment, useState } from \"react\";\n\nfunction AddTodo () {\n    const [description, setDescription] = useState(\"\")\n\n    function handleInputChange (event) {\n        setDescription(event.target.value);\n    };\n\n    async function handleSubmit (event) {\n        event.preventDefault();\n        // Check if description is blank\n        if (description.trim() === '') {\n            alert('Please enter a task before adding!');\n            return;\n      }\n        try {\n            const response = await fetch(\"http://localhost:5000/todos\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" }, // tells the server to parse data in JSON format\n                body: JSON.stringify({ description }) // convert body object into a string to send to request body\n            })\n            window.location = \"/\";\n        }\n        catch (err) {\n            console.error(err);\n        }\n    }\n\n\n    return (\n        <Fragment>\n            <div className=\"container pb-0\">\n                <form className=\"m-5 text-center d-flex\" onSubmit={handleSubmit}>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter a new task here to display it in the list below\" value={description} onChange={handleInputChange} />\n                    <button type=\"submit\" className=\"btn btn-success\">Add Task</button>\n                </form>\n            </div>\n        </Fragment>\n    )\n\n}\n\nexport default AddTodo;","/Users/rachel/Projects/nuArch-todo-app/todo-app/client/src/components/EditTodo.js",["42","43"],[],"import React, { Fragment, useState } from 'react';\n\n\nfunction EditTodo (props) {\n    const [description, setDescription] = useState(props.todo.description)\n    const [todo, setTodos] = useState(props.todo)\n\n    function handleDescriptionChange (event) {\n        setDescription(event.target.value);\n    };\n\n    async function handleUpdates (id, event) {\n        event.preventDefault();\n        try {\n            const body = { description }; // new description from event input changes, set in line 8\n            const response = await fetch(`http://localhost:5000/todos/${id}`, {\n                method: \"PUT\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body) \n            })\n            window.location = \"/\";\n        }\n        catch (err) {\n            console.error(err);\n        }\n    }\n\n        return (\n            <Fragment>\n            <button type=\"button\" className=\"btn btn-info\" data-toggle=\"modal\" data-target={`#id${todo.todo_id}`}>\n            Edit\n            </button>\n    \n            <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" id={`id${todo.todo_id}`}> {/* defining unique modal for each id*/}\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\">Make changes to the to-do</h5>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <input type=\"text\" className=\"form-control\" value={description} onChange={handleDescriptionChange}/>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={(event) => handleUpdates(todo.todo_id, event)}>Save changes</button>\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                    </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment> \n        )\n}\n\nexport default EditTodo;",{"ruleId":"44","severity":1,"message":"45","line":21,"column":19,"nodeType":"46","messageId":"47","endLine":21,"endColumn":29},{"ruleId":"44","severity":1,"message":"48","line":18,"column":19,"nodeType":"46","messageId":"47","endLine":18,"endColumn":27},{"ruleId":"44","severity":1,"message":"49","line":6,"column":18,"nodeType":"46","messageId":"47","endLine":6,"endColumn":26},{"ruleId":"44","severity":1,"message":"48","line":16,"column":19,"nodeType":"46","messageId":"47","endLine":16,"endColumn":27},"no-unused-vars","'deleteTodo' is assigned a value but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","'setTodos' is assigned a value but never used."]